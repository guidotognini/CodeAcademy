// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8]
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9]
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6]
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5]
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6]

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5]
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3]
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4]
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5]
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4]

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4]
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9]
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3]
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3]
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3]

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5]


// Add your functions below:
// função suporte para o cálculo de validação
const newNum = num => num*2>9 ? (num*2) - 9 : num*2

//função para calcular validade do número do cartão de crédito
const validateCred = arr => {
  let supArray=[];
  let sum = 0;
  
  //pequena condicional para caso o número do cartão seja typeof number seja convertido em array
  if (typeof arr === "number") arr = Array.from(String(arr), Number); 
  
  supArray.push(arr[arr.length-1]);
  for(let i = arr.length - 2;i >= 0; i = i-2){
    supArray.unshift(newNum(arr[i]))
    if(i-1!=-1){
      supArray.unshift(arr[i-1])
    };
  };
  sum = supArray.reduce((a,b) => a+b)
  if (sum%10===0) {
    return true
  } else {
    return false
  }
}


const findInvalidCards = arr => {
 return arr.filter(card => validateCred(card) === false)
}



const idInvalidCardCompanies = falseCards => {
  let company = null;
  return Array.from(new Set(falseCards.map(number => {
    if (typeof number === "number") number = Array.from(String(number), Number);
    switch (number[0]) {
      case 3:
        company = 'Amex (American Express'
        return company
        break;    
      case 4:
        company = 'Visa'
        return company
        break;    
      case 5:
        company = 'Mastercard'
        return company
        break;    
      case 6:
        company = 'Discover'
        return company
        break;
      default:
        return 'Company not found'
    }
  })))
  
}


const newCard1 = 4556919748906188
const newCard2 = 2221004730338168
const newCard3 = 342542378634594
const newCard4 = 6011700691622459

const newCards = [newCard1,newCard2,newCard3,newCard4]

console.log(idInvalidCardCompanies(newCards))



